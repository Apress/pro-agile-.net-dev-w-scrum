// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.5.0.0
//      Runtime Version:4.0.30319.225
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
namespace KojackGames.Blackjack.Acceptance.Tests.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.5.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Member Registration")]
    public partial class MemberRegistrationFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "010-MemberRegistration.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Member Registration", "In order to gamble\r\nAs a player\r\nI should be able to register my details", GenerationTargetLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Add an account")]
        public virtual void AddAnAccount()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Add an account", ((string[])(null)));
#line 6
this.ScenarioSetup(scenarioInfo);
#line 7
 testRunner.Given("I have navigated to the registration page");
#line 8
 testRunner.And("I have entered \"Scott@elbandit.co.uk\" for my email");
#line 9
 testRunner.And("I have entered \"Scott\" for my name");
#line 10
 testRunner.And("I have entered \"Cheese@123\" for my password");
#line 11
 testRunner.When("I press register");
#line 12
 testRunner.Then("I should be logged in to my account section");
#line 13
 testRunner.And("a message should say hello \"Scott\"");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Disable access to unauthenticated users")]
        public virtual void DisableAccessToUnauthenticatedUsers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Disable access to unauthenticated users", ((string[])(null)));
#line 15
this.ScenarioSetup(scenarioInfo);
#line 16
 testRunner.Given("that I have not logged In");
#line 17
 testRunner.When("I navigate to the account page");
#line 18
 testRunner.Then("I should be redirected to login");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("log in")]
        public virtual void LogIn()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("log in", ((string[])(null)));
#line 20
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Email",
                        "Name",
                        "Password"});
            table1.AddRow(new string[] {
                        "Scott@elbandit.co.uk",
                        "Scott",
                        "Cheese@123"});
#line 21
 testRunner.Given("that I have an account with the following details", ((string)(null)), table1);
#line 24
 testRunner.And("I navigate to the login page");
#line 25
 testRunner.And("I have entered \"Scott@elbandit.co.uk\" for my email");
#line 26
 testRunner.And("I have entered \"Cheese@123\" for my password");
#line 27
 testRunner.When("I click login");
#line 28
 testRunner.Then("I should be logged in to my account section");
#line 29
 testRunner.And("a message should say hello \"Scott\"");
#line hidden
            testRunner.CollectScenarioErrors();
        }
    }
}
#endregion
